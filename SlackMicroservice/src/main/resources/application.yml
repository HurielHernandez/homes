slack:
  client:
    clientId: "237895291120.241002501221"
    clientSecret: 79c83d653ca6fb2dcd6b74d79bfa6cfc
    accessTokenUri: https://slack.com/api/oauth.access
    userAuthorizationUri: https://slack.com/oauth/authorize
    tokenName: token
    authenticationScheme: query
    clientAuthenticationScheme: form
#   scope: channels:write,channels:read,chat:write:user,users:read,groups:write,im:write,mpim:write
    scope: identity.basic,identity.team,identity.email,identity.avatar
  resource:
    userInfoUri: https://slack.com/api/users.identity
    tokenType: Bearer
    preferTokenInfo: false
    
slackChannel:
  client:
    clientId: "237895291120.241002501221"
    clientSecret: 79c83d653ca6fb2dcd6b74d79bfa6cfc
    accessTokenUri: https://slack.com/api/oauth.access
    userAuthorizationUri: https://slack.com/oauth/authorize
    tokenName: token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: channels:write,channels:read,chat:write:user,users:read,groups:write,im:write,mpim:write
  resource:
    userInfoUri: https://slack.com/api/users.identity
    tokenType: Bearer
    preferTokenInfo: false

slackClient:
  client:
    clientId: "237895291120.241002501221"
    clientSecret: 79c83d653ca6fb2dcd6b74d79bfa6cfc
    accessTokenUri: https://slack.com/api/oauth.access
    userAuthorizationUri: https://slack.com/oauth/authorize
    tokenName: token
    authenticationScheme: query
    clientAuthenticationScheme: form
    scope: client
  resource:
    userInfoUri: https://slack.com/api/users.identity
    tokenType: Bearer
    preferTokenInfo: false

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL}
      
spring:
  application:
    name: slack-microservice
    
server:
  port: ${service.port:9999}
  